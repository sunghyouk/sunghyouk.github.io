<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-10-07T18:06:52+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">BLOG: I Want to collect all my knowledge on One Place</title><subtitle>Accumulating day by day</subtitle><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><entry><title type="html">Introduction to SNOMED CT</title><link href="http://localhost:4000/stom/introduction/" rel="alternate" type="text/html" title="Introduction to SNOMED CT" /><published>2021-10-07T00:00:00+09:00</published><updated>2021-10-07T00:00:00+09:00</updated><id>http://localhost:4000/stom/introduction</id><content type="html" xml:base="http://localhost:4000/stom/introduction/">&lt;h2 id=&quot;chapter-1-overview-of-snomed-ct&quot;&gt;Chapter 1. Overview of SNOMED CT&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SNOMED&lt;/code&gt;는 acronym으로 &lt;strong&gt;Systematized Nomenclature of Medicine&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CT&lt;/code&gt;는 &lt;strong&gt;Clinical Terms&lt;/strong&gt;의 acronym이다.&lt;/p&gt;

&lt;p&gt;SNOMED CT는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;semantically interoperable&lt;/code&gt; polyhierarchical subtype multi-lexical clinical terminology system이다. : 무슨 말인지 모르겠다.&lt;/p&gt;

&lt;p&gt;capable of multi-language support, 그 구조 - reference terminology - 는 ‘reference features’를 추가하며 논리 기반의 subsumption과 clinical terms의 추출을 허용한다. : 무슨 말인지 모르겠다.&lt;/p&gt;

&lt;p&gt;interface terminology이다. : healthcare IT 시스템의 UI에서 임상 데이터 입력과 게시에 대해 사용된다는 의미&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;semantic interoperability&lt;/code&gt;는 개인의 전 생애 EHR의 creation과 maintenance에 필수적이다.&lt;/p&gt;

&lt;p&gt;How to use the EHR system that uses SNOMED CT, 모든 사용자는 어떻게 가장 ‘올바른’ clinical term 또는 term을 찾을 수 있는가를 알 필요가 있다.&lt;/p&gt;

&lt;h2 id=&quot;chapter-2-need-for-clinical-terminology&quot;&gt;Chapter 2. Need for Clinical Terminology&lt;/h2&gt;

&lt;h3 id=&quot;21-clinical-summary&quot;&gt;2.1 Clinical summary&lt;/h3&gt;

&lt;p&gt;환자의 내원 - 주소 - 신체 검진, 진찰 - 혈액 검사 - 처방 - 향후 계획의 예시&lt;br /&gt;
환자-의사의 관계 밖에 있는 누군가가 이 summary를 본다면 이로부터 발생하는 pertinent questions에 답할 수 있는가?&lt;/p&gt;

&lt;h3 id=&quot;22-discussion&quot;&gt;2.2 Discussion&lt;/h3&gt;

&lt;p&gt;대충, healthcare에서 ICT의 역할은 새 기계를 사거나 진단 장비를 사는데 뒤쳐지고 있고,&lt;br /&gt;
이로 인한 손해는 환자가 가장 크며, clinicians, insurer, 국가 모두 손해를 보고 있다는 내용&lt;/p&gt;

&lt;h4 id=&quot;221-semantics-et-al&quot;&gt;2.2.1 Semantics et al&lt;/h4&gt;

&lt;p&gt;정보가 그 의미를 모호함이 없이 보유하도록 확신을 주는 것이 궁극적으로 중요하다.&lt;br /&gt;
그러기 위해 구조적 본래의 상태 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;integrity&lt;/code&gt;를 보유할 뿐 아니라 항상 의미론 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;semantics&lt;/code&gt;을 유지하는 것도 중요하다.&lt;/p&gt;

&lt;p&gt;어떤 상태의 시점에 대한 문제 - 과거력인지 현재 진행 중인 상태인지&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homonym&lt;/code&gt; - 다른 상태, 해부학적 구조를 의미하는 유사한 단어&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;synonym&lt;/code&gt; - 같은 상태와 구조를 의미하는 다른 단어&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eponym&lt;/code&gt; - 어떤 상태를 나타내는 사람의 이름&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;acronym&lt;/code&gt; - 두문자&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;abbreviation&lt;/code&gt; - 약자&lt;/p&gt;

&lt;p&gt;이들의 결과로, 관찰이 기록될 때 clinician이 실제로 의미하는 것이 무엇인지를 잡아내는 것은 상당한 도전 과제이다.&lt;br /&gt;
이를 해결하기 위한 두 가지 접근 방법이 있다.&lt;br /&gt;
한 가지는 &lt;em&gt;시작점이 단어 또는 용어인 lexicography&lt;/em&gt;,&lt;br /&gt;
다른 한 가지는 &lt;em&gt;시작점이 concept인 terminology&lt;/em&gt; 방법이 있을 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;용어 기반의 접근법은 다양한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homonym&lt;/code&gt;을 처리할 수 있다. 예를 들어, cold는 감각으로 common cold는 질병으로 처리할 수 있다.&lt;/li&gt;
  &lt;li&gt;concept 기반의 접근법은 다양한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;synonym&lt;/code&gt;을 처리할 수 있다. 예를 들어 같은 concept의 다른 표현인 myocardial infarction과 heart attack과 같은 것을 처리할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;222-some-word-defined&quot;&gt;2.2.2 Some Word Defined&lt;/h4&gt;

&lt;p&gt;concept은 개념과 생각의 단위를 표현하며, object와 designation 사이에 연결을 형성한다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;designation&lt;/code&gt; - sign에 의한 concept의 표현&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;term&lt;/code&gt; - 특정 주제 영역에서 general concept의 verbal designation&lt;/p&gt;

&lt;p&gt;concept system은 의미론적 문맥에서 모르는 concept의 배치를 허용하여 다른 concept과 관계에서 특정 concept의 중요도나 강도의 개념을 이끌어 낸다.&lt;br /&gt;
그러므로 concept system이 더 어울리고 강건하다 할 수 있다.&lt;/p&gt;

&lt;p&gt;가장 흔한 system은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generic&lt;/code&gt; (&lt;strong&gt;is a&lt;/strong&gt;) relationship 혹은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;partitive&lt;/code&gt; relationship (&lt;strong&gt;part of&lt;/strong&gt;)에 기반한다.&lt;/p&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="SToM" /><category term="SNOMED" /><summary type="html">Introduction to SNOMED CT 도입부</summary></entry><entry><title type="html">Mac 숨김 파일 보기/다시 숨기기</title><link href="http://localhost:4000/coding/hidden/" rel="alternate" type="text/html" title="Mac 숨김 파일 보기/다시 숨기기" /><published>2021-10-01T00:00:00+09:00</published><updated>2021-10-01T00:00:00+09:00</updated><id>http://localhost:4000/coding/hidden</id><content type="html" xml:base="http://localhost:4000/coding/hidden/">&lt;p&gt;터미널에서 사용 권한을 부여하는 방법도 있겠지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Finder&lt;/code&gt;에서 단축키로 보고 다시 숨기고 하는 것이 가능하다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;: 숨김 파일 보기&lt;/p&gt;

&lt;p&gt;다시 단축키  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;를 누르면 사라진다.&lt;/p&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="Coding" /><category term="Tips" /><category term="Mac" /><summary type="html">숨김 파일 확인하기</summary></entry><entry><title type="html">자동으로 시작되는 conda 환경 끄고/키기</title><link href="http://localhost:4000/coding/conda_base/" rel="alternate" type="text/html" title="자동으로 시작되는 conda 환경 끄고/키기" /><published>2021-09-29T00:00:00+09:00</published><updated>2021-09-29T00:00:00+09:00</updated><id>http://localhost:4000/coding/conda_base</id><content type="html" xml:base="http://localhost:4000/coding/conda_base/">&lt;h2 id=&quot;1-배경&quot;&gt;1. 배경&lt;/h2&gt;

&lt;p&gt;터미널을 실행하면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(base)&lt;/code&gt;가 앞에 붙는 경우가 있는데, 이는 Anaconda의 가상 환경 중 base가 항상 터미널 시작 시 같이 실행되기 때문이다.&lt;br /&gt;
VS code로 R을 불러서 작업할 때가 있는데, R 터미널이 켜지면서 이미 R이 initialize 되었는데,&lt;br /&gt;
conda의 activate 명령이 R에 씹혀서 같이 실행되어 error가 나는 것이 영 보기 싫었다.&lt;/p&gt;

&lt;p&gt;사실 그냥 사용해도 문제는 없지만 error 자체가 기분 나쁘니까 python을 쓸 때만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(base)&lt;/code&gt;를 활성화 시키고 싶었다.&lt;/p&gt;

&lt;h2 id=&quot;2-방법&quot;&gt;2. 방법&lt;/h2&gt;

&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 자동 시작 끄기&lt;/span&gt;
conda config &lt;span class=&quot;nt&quot;&gt;--set&lt;/span&gt; auto_activate_base False
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2021년 10월 현재 Mac의 기본 셸은 Z shell이므로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.zshrc&lt;/code&gt;를 새로 고침한다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bash&lt;/code&gt;의 경우 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 자동 시작 켜기&lt;/span&gt;
conda config &lt;span class=&quot;nt&quot;&gt;--set&lt;/span&gt; auto_activate_base True
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;False&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;True&lt;/code&gt;로 바꾸면 off 상태가 on 상태로 바뀌면서 터미널 시작 시 마다 활성화 된다.&lt;/p&gt;

&lt;h2 id=&quot;3-결론&quot;&gt;3. 결론&lt;/h2&gt;

&lt;p&gt;좀 귀찮아 지기는 하다만, VS code에서 R을 쓰는 데 몰입감이 생긴다.&lt;/p&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="Coding" /><category term="Tips" /><category term="Anaconda" /><summary type="html">conda로 환경 on-off 하기</summary></entry><entry><title type="html">사용하고 있는 python package의 version 확인하기</title><link href="http://localhost:4000/coding/version/" rel="alternate" type="text/html" title="사용하고 있는 python package의 version 확인하기" /><published>2021-09-29T00:00:00+09:00</published><updated>2021-09-29T00:00:00+09:00</updated><id>http://localhost:4000/coding/version</id><content type="html" xml:base="http://localhost:4000/coding/version/">&lt;h2 id=&quot;1-문제&quot;&gt;1. 문제&lt;/h2&gt;

&lt;p&gt;가끔 사용하고 있는 python package가 update 되면서 사용하던 함수, 인자, 데이터 형태 등이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deprecated&lt;/code&gt;되는 경우가 있다.&lt;br /&gt;
이 때 package version을 보면 어디서 문제가 되었는지 인터넷 문서를 찾아서 고칠 수 있다.&lt;/p&gt;

&lt;p&gt;하지만, 대신 사용할 수 있는 함수나 인자를 제안하더라도 이와 연결된 다른 package의 다른 함수가 그를 지원하지 않을 수 있다.&lt;br /&gt;
심한 경우 가상 환경을 만들어 version을 맞춰 코딩을 새로 해야할 수도 있다.&lt;/p&gt;

&lt;h2 id=&quot;2-version-확인&quot;&gt;2. version 확인&lt;/h2&gt;

&lt;h3 id=&quot;1-python-내에서&quot;&gt;1. python 내에서&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__version__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-terminal에서&quot;&gt;2. terminal에서&lt;/h3&gt;

&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip show numpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사용해 본 중 위 두 방법이 가장 간단한 것 같다.&lt;br /&gt;
많이 써 놔 봐야 쓰는 것만 쓴다. 간단하고 외우기 쉬운 것이 최고다.&lt;/p&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="Coding" /><category term="Tips" /><category term="Python" /><summary type="html">version 확인하기</summary></entry><entry><title type="html">Regression algorithm의 간단한 원리</title><link href="http://localhost:4000/ml/regression/" rel="alternate" type="text/html" title="Regression algorithm의 간단한 원리" /><published>2021-09-26T00:00:00+09:00</published><updated>2021-09-26T00:00:00+09:00</updated><id>http://localhost:4000/ml/regression</id><content type="html" xml:base="http://localhost:4000/ml/regression/">&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;출처&lt;/code&gt;: 수학과 함께하는 AI 기초 (Part III-3)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data1&lt;/code&gt;: &lt;a href=&quot;https://data.kma.go.kr&quot;&gt;https://data.kma.go.kr&lt;/a&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data2&lt;/code&gt;: &lt;a href=&quot;https://datalab.naver.com&quot;&gt;https://datalab.naver.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-선형-회귀-모델의-이해&quot;&gt;1. 선형 회귀 모델의 이해&lt;/h2&gt;

&lt;h2 id=&quot;2-좋은-직선을-찾는-기준-평균제곱근오차-rmse&quot;&gt;2. 좋은 직선을 찾는 기준, 평균제곱근오차 (RMSE)&lt;/h2&gt;

&lt;h2 id=&quot;3-최소의-평균제곱근오차를-찾는-방법-최소제곱법-lsm&quot;&gt;3. 최소의 평균제곱근오차를 찾는 방법, 최소제곱법 (LSM)&lt;/h2&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="ML" /><category term="ML" /><category term="algorithm" /><summary type="html">Regression algorithm</summary></entry><entry><title type="html">K-NN algorithm의 간단한 원리</title><link href="http://localhost:4000/ml/knn/" rel="alternate" type="text/html" title="K-NN algorithm의 간단한 원리" /><published>2021-09-26T00:00:00+09:00</published><updated>2021-09-26T00:00:00+09:00</updated><id>http://localhost:4000/ml/knn</id><content type="html" xml:base="http://localhost:4000/ml/knn/">&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;출처&lt;/code&gt;: 수학과 함께하는 AI 기초 (Part III-2)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt;: &lt;a href=&quot;https://www.kaggle.com/uciml/iris?select=Iris.csv&quot;&gt;https://www.kaggle.com/uciml/iris?select=Iris.csv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;K-Nearest neighbor algorithm&lt;/strong&gt;알고리즘이란?
새로운 데이터가 들어왔을 때 특성 공간 내에 데이터 간의 거리가 가까운 데이터를 찾아서 그것의 레이블의 값으로 분류하는 알고리즘&lt;/p&gt;

&lt;h2 id=&quot;k-nn-알고리즘을-이용한-붓꽃-분류기&quot;&gt;K-NN 알고리즘을 이용한 붓꽃 분류기&lt;/h2&gt;

&lt;p&gt;분류기 정의:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;붓꽃&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;분류기&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;분류하고&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;싶은&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;데이터&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;분류된&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;데이터&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  

&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;분류하고&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;싶은&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;데이터와&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;분류된&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;데이터&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;사이의&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;거리&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;계산하기&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;분류하고&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;싶은&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;데이터와&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;가까운&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;순서대로&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;나열하기&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;가장&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;가까운&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K개&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;데이터&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;중에서&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;레이블&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;별&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;빈도&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;세기&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;최다&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;빈도의&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;붓꽃&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;레이블값&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;반홚기&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="ML" /><category term="ML" /><category term="algorithm" /><summary type="html">K-NN algorithm</summary></entry><entry><title type="html">iMac (Retina 5K, 27-inch, Late 2015) 고치기 (1)</title><link href="http://localhost:4000/repair/repair/" rel="alternate" type="text/html" title="iMac (Retina 5K, 27-inch, Late 2015) 고치기 (1)" /><published>2021-09-23T00:00:00+09:00</published><updated>2019-09-23T00:00:00+09:00</updated><id>http://localhost:4000/repair/repair</id><content type="html" xml:base="http://localhost:4000/repair/repair/">&lt;p&gt;참조: &lt;a href=&quot;https://support.apple.com/ko-kr/HT207584&quot;&gt;https://support.apple.com/ko-kr/HT207584&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fixing process&lt;/p&gt;

&lt;h2 id=&quot;1-현상&quot;&gt;1. 현상&lt;/h2&gt;

&lt;p&gt;초기화 후 Fusion Drive가 Finder에서 하나가 아닌 두 개의 드라이브로 표시되는 경우 더 이상 Fusion Drive로 작동하지 않는 것임 – 현저히 느림&lt;/p&gt;

&lt;h2 id=&quot;2-원인&quot;&gt;2. 원인&lt;/h2&gt;

&lt;p&gt;초기화 하면서 소프트웨어를 사용하여 Fusion Drive를 의도적으로 별개의 볼륨으로 분할함 – 실수&lt;/p&gt;

&lt;h2 id=&quot;3-사태-파악&quot;&gt;3. 사태 파악&lt;/h2&gt;

&lt;p&gt;Apple 메뉴 &amp;gt; 이 Mac에 관하여를 선택: 저장 공간을 보면,
두 개의 드라이브로 표시됨, 플래시 저장 장치 (24GB), 다른 하나는 SATA에 연결된 1TB&lt;/p&gt;

&lt;h2 id=&quot;4-해결&quot;&gt;4. 해결&lt;/h2&gt;

&lt;p&gt;터미널에서 다시 Fusion Drive 생성
Mojave 이후 버전을 사용 중이므로&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command-R&lt;/code&gt;을 눌러 복구에서 시동하기&lt;/li&gt;
  &lt;li&gt;메뉴 막대에서 유틸리티 &amp;gt; 터미널&lt;/li&gt;
  &lt;li&gt;터미널에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diskutil resetFusion&lt;/code&gt;을 입력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yes&lt;/code&gt; 입력&lt;/li&gt;
  &lt;li&gt;성공했다고 나오면 유틸리티 윈도우로 돌아가기&lt;/li&gt;
  &lt;li&gt;Mac OS 다시 설치 – 초기화 완료&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="Repair" /><category term="Blog" /><category term="Fusiondrive" /><category term="iMac" /><category term="Late2015" /><category term="Fixing" /><summary type="html">Fusion drive 복구</summary></entry><entry><title type="html">K-means algorithm의 간단한 원리</title><link href="http://localhost:4000/ml/kmeans/" rel="alternate" type="text/html" title="K-means algorithm의 간단한 원리" /><published>2021-09-17T00:00:00+09:00</published><updated>2021-09-25T00:00:00+09:00</updated><id>http://localhost:4000/ml/kmeans</id><content type="html" xml:base="http://localhost:4000/ml/kmeans/">&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;출처&lt;/code&gt;: 수학과 함께하는 AI 기초 (Part III-1)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data&lt;/code&gt;: &lt;a href=&quot;https://www.kaggle.com/karangadiya/fifa19/version/4&quot;&gt;https://www.kaggle.com/karangadiya/fifa19/version/4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;K-Means 군집화 알고리즘&lt;/strong&gt;의 동작 과정 알아보기&lt;/p&gt;

&lt;h2 id=&quot;1단계-표본-공간에-k개의-중심을-무작위로-생성하기&quot;&gt;1단계: 표본 공간에 K개의 중심을 무작위로 생성하기&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;군집&lt;/code&gt; (비슷한 특성을 지닌 데이터들의 집합)을 만들기 위해서 중심 (centroid)이 필요한데, 이유는 중심을 기준으로 가까운 거리의 점을 같은 군집에 포함할지 말지를 결정하기 때문
중심은 무작위로 생성하도록 한다.&lt;/p&gt;

&lt;h2 id=&quot;2단계-각-표본을-가장-가까운-중심에-할당하기&quot;&gt;2단계: 각 표본을 가장 가까운 중심에 할당하기&lt;/h2&gt;

&lt;p&gt;개별 데이터는 가장 가깝게 있는 군집의 중심이 소속된 군집 (cluster)으로 할당한다.&lt;/p&gt;

&lt;h2 id=&quot;3단계-각-군집의-중심을-새롭게-계산하기&quot;&gt;3단계: 각 군집의 중심을 새롭게 계산하기&lt;/h2&gt;

&lt;p&gt;새로운 데이터가 추가되면 군집에 속한 데이터들의 평균을 바탕으로 군집의 중심좌표가 다시 계산된다.
군집의 중심과 해당 군집에 속한 데이터 간의 거리를 계산한 결과에 변화가 없을 때까지 개별 데이터를 군집에 할당하고, 군집의 중심을 다시 계산하는 과정을 반복한다.&lt;/p&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="ML" /><category term="ML" /><category term="algorithm" /><summary type="html">K-means algorithm</summary></entry><entry><title type="html">Mathematics for machine learning - Chapter 1: Introduction and motivation</title><link href="http://localhost:4000/math/chapter_1/" rel="alternate" type="text/html" title="Mathematics for machine learning - Chapter 1: Introduction and motivation" /><published>2021-09-16T00:00:00+09:00</published><updated>2021-09-17T00:00:00+09:00</updated><id>http://localhost:4000/math/chapter_1</id><content type="html" xml:base="http://localhost:4000/math/chapter_1/">&lt;p&gt;&lt;strong&gt;머신러닝의 수학적 기초를 배운다&lt;/strong&gt;는 것은&lt;/p&gt;

&lt;p&gt;새 머신러닝 해법을 창조하고, 기존 접근법을 이해하고 오류를 해결하며, 방법론의 가정과 제약을 배우는 것을 촉진한다. - 그래서 중요하다.&lt;/p&gt;

&lt;h2 id=&quot;11-finding-words-for-intuitions&quot;&gt;1.1 Finding words for intuitions&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Summary&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We represent data as &lt;strong&gt;vectors&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We choose an appropriate model, either using the probabilistic or optimization view.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We learn from available data by using numerical optimization methods with the aim that the model performs well on data not used for training.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;12-two-ways-to-read-this-book&quot;&gt;1.2 Two ways to read this book&lt;/h2&gt;

&lt;h3 id=&quot;part-i-is-about-mathematics&quot;&gt;Part I is about Mathematics&lt;/h3&gt;

&lt;p&gt;chapter 2: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linear algebra&lt;/code&gt;
chapter 3: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;analytic geometry&lt;/code&gt;
chapter 4: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matrix decomposition&lt;/code&gt;
chapter 5: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector calculus&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;optimization&lt;/code&gt;
chapter 6: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;probabilistic theory&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;part-ii-is-about-machine-learning&quot;&gt;Part II is about Machine learning&lt;/h3&gt;

&lt;p&gt;chapter 8: data, model, parameter estimation (learning)
chapter 9: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linear regression&lt;/code&gt;
chapter 10: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dimensionality reduction&lt;/code&gt; (principal component analysis)
chapter 11: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;density estimation&lt;/code&gt; (Gaussian mixture model)
chapter 12: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;classification&lt;/code&gt; (Support vector machine)&lt;/p&gt;

&lt;h2 id=&quot;13-exercises-and-feedback&quot;&gt;1.3 Exercises and feedback&lt;/h2&gt;

&lt;h3 id=&quot;part-i-손과-펜으로-풀만한-것&quot;&gt;Part I: 손과 펜으로 풀만한 것&lt;/h3&gt;

&lt;h3 id=&quot;part-ii-jupyter-notebook을-이용한-programming-tutorial&quot;&gt;Part II: jupyter notebook을 이용한 programming tutorial&lt;/h3&gt;

&lt;p&gt;[이 책의 링크] (&lt;a href=&quot;https://mml-book.com&quot;&gt;https://mml-book.com&lt;/a&gt;)&lt;/p&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="MATH" /><category term="mathematics" /><category term="introduction" /><category term="MML-book" /><summary type="html">Introduction</summary></entry><entry><title type="html">Welcome to my repository</title><link href="http://localhost:4000/blog/welcome/" rel="alternate" type="text/html" title="Welcome to my repository" /><published>2021-08-25T00:00:00+09:00</published><updated>2021-09-25T00:00:00+09:00</updated><id>http://localhost:4000/blog/welcome</id><content type="html" xml:base="http://localhost:4000/blog/welcome/">&lt;p&gt;It is the 1st content of my GitHub&lt;/p&gt;

&lt;h2 id=&quot;1-최초작성&quot;&gt;1. 최초작성&lt;/h2&gt;

&lt;p&gt;This is first state of my repository: test project&lt;br /&gt;
GitHub에서 작성한 최초의 글입니다.&lt;/p&gt;

&lt;p&gt;2021-08-25 Wed&lt;/p&gt;

&lt;h2 id=&quot;2-sidebar-만들고-수정&quot;&gt;2. sidebar 만들고 수정&lt;/h2&gt;

&lt;p&gt;in 2021-09-09 Thr&lt;/p&gt;

&lt;h2 id=&quot;3-category-sidebar-글자-크기-수정&quot;&gt;3. category, sidebar 글자 크기 수정&lt;/h2&gt;

&lt;p&gt;category: (AI, ML, DL), (MATH, STAT), and blog 생성&lt;br /&gt;
sidebar의 글자 크기 중 특정 카테고리의 문자가 더 크게 보이는 문제&lt;br /&gt;
대부분은 &lt;strong&gt;오타&lt;/strong&gt;가 문제를 일으킨다&lt;/p&gt;

&lt;p&gt;in 2021-09-23 Thr&lt;/p&gt;

&lt;h2 id=&quot;4-category-추가&quot;&gt;4. category 추가&lt;/h2&gt;

&lt;p&gt;category: repair - 종종 있지만 자주 있지는 않아서 자꾸 잊어 버리는 컴퓨터 수리에 관한 내용 추가&lt;/p&gt;

&lt;p&gt;category: coding - coding에 대한 tip을 인터넷에서 찾기 귀찮아서 추가&lt;/p&gt;

&lt;p&gt;category: standard terminology of medicine (SToM) 추가&lt;/p&gt;

&lt;p&gt;in 2021-10-07 Thr&lt;/p&gt;</content><author><name>Sung Hyouk Choi</name><email>sakebite@snu.ac.kr</email></author><category term="Blog" /><category term="Blog" /><category term="GitHub" /><summary type="html">Welcome</summary></entry></feed>